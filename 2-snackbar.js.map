{"version":3,"file":"2-snackbar.js","sources":["../src/js/promise-generator.js","../src/js/2-snackbar.js"],"sourcesContent":["export function createPromise(delay, state) {\n  return new Promise((resolve, reject) =>\n    setTimeout(() => {\n      state === 'fulfilled' ? resolve(delay) : reject(delay);\n    }, delay)\n  );\n}\n","import { createPromise } from './promise-generator';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst taskForm = document.querySelector('.form');\n\nfunction handleFormSubmit(e) {\n  e.preventDefault();\n\n  const form = e.currentTarget;\n  const delay = parseInt(form.elements.delay.value, 10);\n  const state = form.elements.state.value;\n\n  if (isNaN(delay) || !state) {\n    iziToast.warning({\n      message: `Please, fill all fields`,\n      position: 'topRight',\n    });\n    return;\n  }\n\n  createPromise(delay, state)\n    .then(delay =>\n      iziToast.success({\n        message: `Fulfilled promise in ${delay}ms`,\n        position: 'topRight',\n      })\n    )\n    .catch(delay =>\n      iziToast.error({\n        message: `Rejected promise in ${delay}ms`,\n        position: 'topRight',\n      })\n    );\n\n  form.reset();\n}\n\ntaskForm.addEventListener('submit', handleFormSubmit);\n"],"names":["createPromise","delay","state","resolve","reject","taskForm","handleFormSubmit","form","iziToast"],"mappings":"sIAAO,SAASA,EAAcC,EAAOC,EAAO,CAC1C,OAAO,IAAI,QAAQ,CAACC,EAASC,IAC3B,WAAW,IAAM,CACfF,IAAU,YAAcC,EAAQF,CAAK,EAAIG,EAAOH,CAAK,CAC3D,EAAOA,CAAK,CACT,CACH,CCFA,MAAMI,EAAW,SAAS,cAAc,OAAO,EAE/C,SAASC,EAAiB,EAAG,CAC3B,EAAE,eAAgB,EAElB,MAAMC,EAAO,EAAE,cACTN,EAAQ,SAASM,EAAK,SAAS,MAAM,MAAO,EAAE,EAC9CL,EAAQK,EAAK,SAAS,MAAM,MAElC,GAAI,MAAMN,CAAK,GAAK,CAACC,EAAO,CAC1BM,EAAS,QAAQ,CACf,QAAS,0BACT,SAAU,UAChB,CAAK,EACD,MACJ,CAEER,EAAcC,EAAOC,CAAK,EACvB,KAAKD,GACJO,EAAS,QAAQ,CACf,QAAS,wBAAwBP,CAAK,KACtC,SAAU,UACX,CAAA,CACP,EACK,MAAMA,GACLO,EAAS,MAAM,CACb,QAAS,uBAAuBP,CAAK,KACrC,SAAU,UACX,CAAA,CACF,EAEHM,EAAK,MAAO,CACd,CAEAF,EAAS,iBAAiB,SAAUC,CAAgB"}